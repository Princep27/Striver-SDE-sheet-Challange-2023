class Solution {
public:
    #define ll long long
    int widthOfBinaryTree(TreeNode* root) {
        ll ans = 0;
        queue<pair<TreeNode*,ll>> q;

        if(root == NULL) return ans;
        q.push({root,1});
        
        while(!q.empty()){

            ll n = q.size();
            ll mini,maxi;

            for(int i=0;i<n;i++){
                ll pos = q.front().second;
                TreeNode *temp = q.front().first;
                q.pop();

                if(i == 0){
                    mini = maxi = pos;
                }else{
                    maxi = pos;
                }

                if(temp->left) q.push({temp->left,2*(pos-mini+1)-1});
                if(temp->right) q.push({temp->right,2*(pos-mini+1)});
            }

            ans = max(ans,maxi-mini+1);    
        }
        return ans;
    }
};

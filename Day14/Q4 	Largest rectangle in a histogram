class Solution {
public:
    int largestRectangleArea(vector<int>& heights) {
        int n = heights.size();
        stack<int> st;

        int l[n];
        int r[n];
        for(int i=0;i<n;i++){
            if(st.empty()){
                l[i] = -1;
            }else{
                while(!st.empty() && heights[st.top()] >= heights[i]){
                    st.pop();
                }
                if(st.empty()){
                    l[i] = -1;
                }else{
                    l[i] = st.top();
                }
            }
            st.push(i);
        }

        while(!st.empty()) st.pop();

        for(int i=n-1;i>=0;i--){
            if(st.empty()){
                r[i] = n;
            }else{
                while(!st.empty() && heights[st.top()] >= heights[i]){
                    st.pop();
                }
                if(st.empty()){
                    r[i] = n;
                }else{
                    r[i] = st.top();
                }
            }
            st.push(i);
        }

        int ans = 0;
        for(int i=0;i<n;i++){
            ans = max(ans, heights[i]*(r[i]-l[i]-1));
        }
        return ans;
    }
};

bool possible(vector<int> &stall,int mid,int k,int n){
    int cnt = 1;

    int prev = stall[0];
    for(int i=0;i<n;i++){
        int dist = stall[i]-prev;
        if(dist >= mid){
            prev = stall[i];
            cnt++;
        }
        if(cnt == k) return true;
    }
    return false;
}

int aggressiveCows(vector<int> &stalls, int k)
{
    int n = stalls.size();    
    sort(stalls.begin(),stalls.end());
    int l = 1, r = stalls[n-1] - stalls[0];
    int ans = -1;

    while(l <= r){
        int mid = (l+r)/2;
        if(possible(stalls,mid,k,n)){
            ans = mid;
            l = mid+1;
        }else{
            r = mid-1;
        }
    }
    
    return ans;
}

class Solution {
public:
    bool valid(vector<vector<char>> &arr,int r,int c,char num){

        for(int i=0;i<9;i++) 
        if(arr[r][i] == num) return false;

        for(int i=0;i<9;i++) 
        if(arr[i][c] == num) return false;

        int x = (r/3)*3, y = (c/3)*3;
        for(int i=x;i<x+3;i++){
            for(int j=y;j<y+3;j++){
                if(arr[i][j] == num)
                return false;
            }
        }

        return true;
    }

    bool solve(vector<vector<char>>& arr){
        for(int i=0;i<9;i++){
            for(int j=0;j<9;j++){
                if(arr[i][j] == '.'){
                    for(char num='1';num<='9';num++){
                        if(valid(arr,i,j,num)){
                            arr[i][j] = num;

                            if(solve(arr))
                               return true;
                            else
                               arr[i][j] = '.';

                        }
                    }
                    return false;
                }
            }
        }

        return true;
    }

    void solveSudoku(vector<vector<char>>& board) {
        solve(board);
    }
};

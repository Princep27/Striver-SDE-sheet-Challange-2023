#include <bits/stdc++.h> 
void solve(string &s,int index,int n,unordered_map<string,int> &mp,
 vector<string> &ans,vector<string> &temp){
    if(index >= n){
        string st;
        st += temp[0];
        for(int i=1;i<temp.size();i++){
            st += ' ';
            st += temp[i];
        }
        ans.push_back(st);
        return;
    }

    string str;
    for (int i = index; i < n; i++) {
        str += s[i];

            if (mp.find(str) != mp.end()) {
                temp.push_back(str);
                solve(s,i+1,n,mp,ans,temp);

                temp.pop_back();
            }
    }
}


vector<string> wordBreak(string &s, vector<string> &dictionary)
{
    unordered_map<string,int> mp;
    vector<string> ans;
    vector<string> temp;
   for(int i=0;i<dictionary.size();i++) mp[dictionary[i]] = 1;
   solve(s,0,s.length(),mp,ans,temp);
   return ans;
}
